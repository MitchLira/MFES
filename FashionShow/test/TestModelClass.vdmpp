class TestModelClass is subclass of MyTestCase
instance variables
	--designers
	d1: Designer := new Designer("Oscar de La Renta");
	d2: Designer := new Designer("Donna Karen");
	d3: Designer := new Designer("Alexander McQueen");
	d4: Designer := new Designer("Coco Chanel");
	d5: Designer := new Designer("Ralph Lauren");
	d6: Designer := new Designer("Karl Lagerfeld");
	d7: Designer := new Designer("Donatella Versace");
	
	--e1: Runway := new Event("nome",mk_Date(year, month, day),"place","theme",price, MaxSpectators);
	-- fashion shows
	f1: Runway := new Runway("Wonderland", mk_Plataform`Date(2018, 9, 20),"London","Fantasy",75,100);
	f2: Runway := new Runway("New World", mk_Plataform`Date(2019, 11, 10),"U.S.A", "Rock",100,60);
	f3: Runway := new Runway("Pop Culture", mk_Plataform`Date(2018, 8, 2),"Paris", "Pop",20,90);
	f4: Runway := new Runway("Angels", mk_Plataform`Date(2018,3, 1),"Paris", "Fantasy",200,50);
	f5: Runway := new Runway("Wonderland", mk_Plataform`Date(2018, 2,29 ),"London", "Fantasy",120,40);
	f6: Runway := new Runway("Wonderland", mk_Plataform`Date(2019, 12, 17),"London", "Fantasy",30,100);
	f7: Runway := new Runway("Wonderland", mk_Plataform`Date(2019, 10, 13),"London", "Fantasy",40,120);
	
operations
	public testGetModelsAttributes: () ==> ()
	testGetModelsAttributes() == (
    IO`println("\t\t test get attributes of a Model");
   
    let m1 = new Model("Adriana Lima", 36, 1.78, "Brasilian", <Female>) in (
 		assertEqual(m1.name,"Adriana Lima");
 		assertEqual(m1.age, 36);
 		assertEqual(m1.gender, <Female>);
 		assertEqual(m1.height,1.78);
 		assertEqual(m1.nationality, "Brasilian");
   );
	);
	
	public testSetShowsModels: () ==> ()
	testSetShowsModels() == (
    IO`println("\t\t test set shows operation of a Model");
    let m1 = new Model("Adriana Lima", 36, 1.78, "Brasilian", <Female>) in (
 		m1.setShows({f1, f2, f3});
 		assertEqual(m1.shows, {f1,f2,f3});
   );
	);	
	
	public testAddShowModels: () ==> ()
	testAddShowModels() == (
    IO`println("\t\t test add show to a Model");
    let m1 = new Model("Adriana Lima", 36, 1.78, "Brasilian", <Female>) in (
 		m1.setShows({f1, f2, f4});
 		assertEqual(m1.shows, {f1,f2,f4});
 		m1.addShow(f5);
 		assertEqual(m1.shows,{f1,f2,f4,f5});
   );
	);	
	
	public testRemShowModels: () ==> ()
	testRemShowModels() == (
    IO`println("\t\t test remove show from a Model");
    let m1 = new Model("Adriana Lima", 36, 1.78, "Brasilian", <Female>) in (
 		m1.setShows({f1, f2, f4});
 		assertEqual(m1.shows, {f1,f2,f4});
 		m1.remShow(f2);
 		assertEqual(m1.shows,{f1,f4});
   );
	);
	
	-- Entry point that runs all tests with valid inputs
  public testAll: () ==> ()
  testAll() == (
  	testGetModelsAttributes();
  	testSetShowsModels();
  	testAddShowModels();
  	testRemShowModels();
  );
end TestModelClass