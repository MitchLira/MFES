class Model
types
	public Age = int
	 inv i ==  i <= 65 and  i >= 18;
	public Height = real 
		inv r == r <= 2.10 and r >= 1.60;
	public Gender = <Female>|<Male>;
values
-- TODO Define values here
instance variables
 public name:  Plataform`String;
 public age: Age;
 public height: Height; 
 public nationality: Plataform`String;
 public shows: set of Event;
 public gender: Gender;
 
 inv card shows >= 0;
 
operations
	public Model: Plataform`String * Age * Height * Plataform`String * Gender ==> Model 
	Model(n, a, h, na, g) == 
	(
		name := n;
		age := a;
		height := h;
		nationality := na;
		shows := {};
		gender := g;
		return self;
	);

	public setShows: set of Event ==> ()
		setShows(newShows) == (
	 	shows := newShows;
		)
	pre shows = {}
	post shows = newShows;
	
	public addShow: Event ==> ()
		addShow(newShow) == (
	 			shows := shows union {newShow}
	)
	pre newShow not in set shows 
		and forall s in set shows & (newShow.date.day <> s.date.day or
																 newShow.date.month <> s.date.month or
		 														 newShow.date.year <> s.date.year)
	post newShow in set shows;
	
	public remShow: Event ==> ()
		remShow(oldShow) == (
			shows := shows \ {oldShow}
		)
		pre oldShow in set shows
		and shows <> {}
		post oldShow not in set shows;
		
functions
-- TODO Define functiones here

end Model